select @@version; //Version of sql server
select @@Servername  //server name
use AdventureWorks2019
Select *
FROM HumanResources.Employee;

Select BusinessEntityID,JobTitle
FROM HumanResources.Employee;

Select JobTitle
FROM HumanResources.Employee;

Select DISTINCT JobTitle
FROM HumanResources.Employee;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE JobTitle = 'Research and Development Manager';

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID > 50;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID >= 50;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID <= 50;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID < 50;

SELECT SubTotal, TaxAmt, SubTotal + TaxAmt AS SubTotalWithTaxAmt
FROM Purchasing.PurchaseOrderHeader;

SELECT SubTotal, TaxAmt, SubTotal - TaxAmt AS a
FROM Purchasing.PurchaseOrderHeader;

SELECT SubTotal, TaxAmt, SubTotal / TaxAmt AS a
FROM Purchasing.PurchaseOrderHeader
WHERE TaxAmt > 0 ;

SELECT SubTotal, TaxAmt, SubTotal + TaxAmt AS SubTotalWithTaxAmt
FROM Purchasing.PurchaseOrderHeader;
WHERE SubTotalWithTaxAmt > 500 ;                                    //Error

SELECT SubTotal, TaxAmt, SubTotal + TaxAmt AS SubTotalWithAmt
FROM Purchasing.PurchaseOrderHeader
WHERE SubTotal + TaxAmt >500 ;

==> the order of execution:  FROM-->WHERE-->SELECT

SELECT *
FROM Person.Person;

SELECT FirstName, MiddleName, LastName
FROM Person.Person;

SELECT FirstName, MiddleName, LastName , FirstName + MiddleName +  
       LastName AS FullName
FROM Person.Person;

SELECT FirstName, MiddleName, LastName , FirstName + ' ' + MiddleName +  
       ' ' + LastName AS FullName
FROM Person.Person;

SELECT FirstName, MiddleName, LastName 
FROM Person.Person
WHERE MiddleName IS NULL ;

SELECT FirstName, MiddleName, LastName 
FROM Person.Person
WHERE MiddleName IS NOT NULL ;

SELECT *
FROM HumanResources.Employee
WHERE MaritalStatus = 'S' AND Gender = 'F'; 

SELECT *
FROM HumanResources.Employee
WHERE JobTitle = 'Design ENgineer' OR JobTitle = 'Research and Development Manager';

SELECT *
FROM HumanResources.Employee
WHERE JobTitle IN ('Design ENgineer', 'Research and Development Manager');

SELECT *
FROM HumanResources.Employee
WHERE BusinessEntityID IN (1,5,10,15);

SELECT *
FROM HumanResources.Employee
WHERE BusinessEntityID BETWEEN 1 AND 50 ;

SELECT *
FROM Person.StateProvince
WHERE Name LIKE 'AL%' ;

SELECT *
FROM Person.StateProvince
WHERE Name LIKE '%O' ;

SELECT *
FROM Person.StateProvince
WHERE Name LIKE 'AL____' ;

SELECT City, PostalCode
FROM Person.Address
ORDER BY City ;

SELECT City, PostalCode
FROM Person.Address
ORDER BY City DESC ;

SELECT FirstName, LastName, MiddleName
FROM Person.Person
WHERE MiddleName IS NOT NULL
ORDER BY FirstName DESC, LastName ASC;

SELECT SalesOrderID, UnitPrice
FROM Sales.SalesOrderDetail;

SELECT SalesOrderID, SUM(UnitPrice) AS TotalUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, AVG(UnitPrice) AS AvgUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, COUNT(UnitPrice) AS CountUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, MAX(UnitPrice) AS MaxUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, MIN(UnitPrice) AS MinUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT FirstName, MiddleName, LastName,
       CONCAT(FirstName,' ', MiddleName,' ', LastName) AS FullName
From Person.Person

SELECT FirstName, LEN(FirstName)
From Person.Person

SELECT FirstName, LEFT(FirstName,2) AS ExtractFromLeft
From Person.Person;

SELECT FirstName, RIGHT(FirstName,3) AS ExtractFromRight
From Person.Person;

SELECT FirstName, SUBSTRING(FirstName,3,4) AS ExtractASubstring
From Person.Person;

SELECT SalesOrderId, OrderDate, DAY(OrderDate) AS extractDay
From Sales.SalesOrderHeader;

SELECT SalesOrderId, OrderDate, MONTH(OrderDate) AS extractMonth
From Sales.SalesOrderHeader;

SELECT SalesOrderId, OrderDate, YEAR(OrderDate) AS extractYear
From Sales.SalesOrderHeader;

SELECT CURRENT_TIMESTAMP;

SELECT SalesOrderId, SUM(UnitPrice) AS TotalUnitPricePerSales
From Sales.SalesOrderDetail
WHERE SUM(UnitPrice) > 10000                                              //ERROR ==> use HAVING 
GROUP BY SalesOrderId

SELECT SalesOrderId, SUM(UnitPrice) AS TotalUnitPricePerSales
From Sales.SalesOrderDetail
GROUP BY SalesOrderId
HAVING SUM(UnitPrice) > 10000

SELECT SalesOrderId, SUM(UnitPrice) AS TotalUnitPricePerSales
From Sales.SalesOrderDetail
WHERE SalesOrderID>50000
GROUP BY SalesOrderId
HAVING SUM(UnitPrice) > 10000
ORDER BY SalesOrderId DESC;

SELECT PurchaseOrderID, EmployeeID FROM Purchasing.PurchaseOrderHeader
WHERE PurchaseOrderID IN
(
  SELECT PurchaseOrderID FROM Purchasing.PurchaseOrderDetail WHERE PurchaseOrderDetailID >5
)

SELECT BusinessEntityID FROM HumanResources.Employee
UNION
SELECT BusinessEntityID FROM Person.Person
UNION
SELECT CustomerID fROM Sales.Customer


SELECT BusinessEntityID FROM HumanResources.Employee
UNION ALL
SELECT BusinessEntityID FROM Person.Person
UNION ALL
SELECT CustomerID fROM Sales.Customer

SELECT pod.PurchaseOrderID, pod.PurchaseOrderDetailId, poh.OrderDate
FROM Purchasing.PurchaseOrderDetail pod
   INNER JOIN
 Purchasing.PurchaseOrderHeader poh
 ON pod.PurchaseOrderDetailID = poh.PurchaseOrderID


SELECT p.BusinessEntityID, p.FirstName, p.LastName, bea.BusinessEntityID, bea.AddressID
FROM Person.Person p
LEFT JOIN
Person.BusinessEntityAddress bea
ON p.BusinessEntityID = bea.BusinessEntityID

SELECT p.BusinessEntityID, p.FirstName, p.LastName, bea.BusinessEntityID, bea.AddressID
FROM Person.Person p
RIGHT JOIN
Person.BusinessEntityAddress bea
ON p.BusinessEntityID = bea.BusinessEntityID

SELECT p.BusinessEntityID, p.FirstName, p.LastName, bea.BusinessEntityID, bea.AddressID
FROM Person.Person p
RIGHT OUTER JOIN
Person.BusinessEntityAddress bea
ON p.BusinessEntityID = bea.BusinessEntityID

SELECT p.BusinessEntityID, p.FirstName, p.LastName, bea.BusinessEntityID, bea.AddressID
FROM Person.Person p
FULL OUTER JOIN
Person.BusinessEntityAddress bea
ON p.BusinessEntityID = bea.BusinessEntityID

CREATE TABLE CovidStatus
(CovidID INT IDENTITY(1,3),
CovidDate DateTime,	  
DailyConfirmedCases INT,
DailyDeaths smallint,
Country Varchar(25),
CovidFlag bit,
TotalLosss Money 
);

CREATE TABLE ItemHeader
(
ItemID INT PRIMARY KEY,
ItemName VARCHAR(50) UNIQUE,
ItemOrderDate datetime NOT NULL ,
ItemShipDate datetime NOT NULL,
ItemAmount Money 
);


CREATE TABLE ItemDetail
(
ItemID INT,
ItemDetailID INT,
ItemDueDate datetime NOT NULL,
ItemOrderQty SMALLINT NOT NULL,
ItemReceivedQty SMALLINT NOT NULL,
ItemShipDate datetime,
ItemAmount Money,
CONSTRAINT ItemDetailPK PRIMARY KEY(ItemID,ItemDetailID),
CONSTRAINT ItemDetailFK FOREIGN KEY (ItemID) REFERENCES ItemHeader(ItemID)
);

INSERT INTO dbo.CovidStatus VALUES ('4/25/2020',1000,10,'USA',1,1000000);

INSERT INTO dbo.CovidStatus(CovidDate,Country) VALUES ('4/25/2020','Tuvalu');

INSERT INTO dbo.CovidStatus(CovidDate,DailyConfirmedCases,DailyDeaths, Country,CovidFlag,TotalLosss)
VALUES
(4/25/2020,800,6,'Brazil',1,500000),
(4/25/2020,750,6,'Russia',1,550000),
(4/25/2020,0,0,'Palau',0,5000);

ALTER TABLE CovidStatus
ADD continent char(12);

ALTER TABLE CovidStatus
ALTER column continent varchar(15);

Alter TABLE CovidStatus
DROP column continent;

DELETE FROM CovidStatus where Country= 'Brazil' AND CovidFlag=1;

DELETE  TOP (2) FROM CovidStatus;


