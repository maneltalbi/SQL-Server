select @@version; //Version of sql server
select @@Servername  //server name
use AdventureWorks2019
Select *
FROM HumanResources.Employee;

Select BusinessEntityID,JobTitle
FROM HumanResources.Employee;

Select JobTitle
FROM HumanResources.Employee;

Select DISTINCT JobTitle
FROM HumanResources.Employee;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE JobTitle = 'Research and Development Manager';

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID > 50;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID >= 50;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID <= 50;

Select DISTINCT BusinessEntityID,JobTitle
FROM HumanResources.Employee
WHERE BusinessEntityID < 50;

SELECT SubTotal, TaxAmt, SubTotal + TaxAmt AS SubTotalWithTaxAmt
FROM Purchasing.PurchaseOrderHeader;

SELECT SubTotal, TaxAmt, SubTotal - TaxAmt AS a
FROM Purchasing.PurchaseOrderHeader;

SELECT SubTotal, TaxAmt, SubTotal / TaxAmt AS a
FROM Purchasing.PurchaseOrderHeader
WHERE TaxAmt > 0 ;

SELECT SubTotal, TaxAmt, SubTotal + TaxAmt AS SubTotalWithTaxAmt
FROM Purchasing.PurchaseOrderHeader;
WHERE SubTotalWithTaxAmt > 500 ;                                    //Error

SELECT SubTotal, TaxAmt, SubTotal + TaxAmt AS SubTotalWithAmt
FROM Purchasing.PurchaseOrderHeader
WHERE SubTotal + TaxAmt >500 ;

==> the order of execution:  FROM-->WHERE-->SELECT

SELECT *
FROM Person.Person;

SELECT FirstName, MiddleName, LastName
FROM Person.Person;

SELECT FirstName, MiddleName, LastName , FirstName + MiddleName +  
       LastName AS FullName
FROM Person.Person;

SELECT FirstName, MiddleName, LastName , FirstName + ' ' + MiddleName +  
       ' ' + LastName AS FullName
FROM Person.Person;

SELECT FirstName, MiddleName, LastName 
FROM Person.Person
WHERE MiddleName IS NULL ;

SELECT FirstName, MiddleName, LastName 
FROM Person.Person
WHERE MiddleName IS NOT NULL ;

SELECT *
FROM HumanResources.Employee
WHERE MaritalStatus = 'S' AND Gender = 'F'; 

SELECT *
FROM HumanResources.Employee
WHERE JobTitle = 'Design ENgineer' OR JobTitle = 'Research and Development Manager';

SELECT *
FROM HumanResources.Employee
WHERE JobTitle IN ('Design ENgineer', 'Research and Development Manager');

SELECT *
FROM HumanResources.Employee
WHERE BusinessEntityID IN (1,5,10,15);

SELECT *
FROM HumanResources.Employee
WHERE BusinessEntityID BETWEEN 1 AND 50 ;

SELECT *
FROM Person.StateProvince
WHERE Name LIKE 'AL%' ;

SELECT *
FROM Person.StateProvince
WHERE Name LIKE '%O' ;

SELECT *
FROM Person.StateProvince
WHERE Name LIKE 'AL____' ;

SELECT City, PostalCode
FROM Person.Address
ORDER BY City ;

SELECT City, PostalCode
FROM Person.Address
ORDER BY City DESC ;

SELECT FirstName, LastName, MiddleName
FROM Person.Person
WHERE MiddleName IS NOT NULL
ORDER BY FirstName DESC, LastName ASC;

SELECT SalesOrderID, UnitPrice
FROM Sales.SalesOrderDetail;

SELECT SalesOrderID, SUM(UnitPrice) AS TotalUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, AVG(UnitPrice) AS AvgUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, COUNT(UnitPrice) AS CountUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, MAX(UnitPrice) AS MaxUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT SalesOrderID, MIN(UnitPrice) AS MinUnitPricePerSales
FROM Sales.SalesOrderDetail
GROUP BY SalesOrderId;

SELECT FirstName, MiddleName, LastName,
       CONCAT(FirstName,' ', MiddleName,' ', LastName) AS FullName
From Person.Person

SELECT FirstName, LEN(FirstName)
From Person.Person

SELECT FirstName, LEFT(FirstName,2) AS ExtractFromLeft
From Person.Person;

SELECT FirstName, RIGHT(FirstName,3) AS ExtractFromRight
From Person.Person;

SELECT FirstName, SUBSTRING(FirstName,3,4) AS ExtractASubstring
From Person.Person;

SELECT SalesOrderId, OrderDate, DAY(OrderDate) AS extractDay
From Sales.SalesOrderHeader;

SELECT SalesOrderId, OrderDate, MONTH(OrderDate) AS extractMonth
From Sales.SalesOrderHeader;

SELECT SalesOrderId, OrderDate, YEAR(OrderDate) AS extractYear
From Sales.SalesOrderHeader;

SELECT CURRENT_TIMESTAMP;

SELECT SalesOrderId, SUM(UnitPrice) AS TotalUnitPricePerSales
From Sales.SalesOrderDetail
WHERE SUM(UnitPrice) > 10000                                              //ERROR ==> use HAVING 
GROUP BY SalesOrderId


